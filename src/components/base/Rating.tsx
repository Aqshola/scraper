import { checkIsDecimal } from "@/helpers/validation";
import React, { useEffect } from "react";

type Props = {
  count: number;
};

function RatingOn() {
  return (
    <svg
      width="14"
      height="14"
      viewBox="0 0 17 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M9.45467 1.15673L10.8745 3.9963C11.0658 4.38901 11.5793 4.76157 12.0123 4.84213L14.58 5.26504C16.2213 5.53692 16.604 6.72516 15.4258 7.91335L13.422 9.91716C13.0897 10.2494 12.8984 10.904 13.0092 11.3772L13.5831 13.8543C14.0363 15.8078 12.989 16.573 11.2672 15.546L8.86058 14.1161C8.42759 13.8543 7.7026 13.8543 7.26961 14.1161L4.86302 15.546C3.1411 16.563 2.09389 15.8078 2.54701 13.8543L3.12097 11.3772C3.21159 10.8939 3.02027 10.2394 2.68798 9.90709L0.684169 7.90328C-0.493951 6.72516 -0.111313 5.53692 1.53 5.25497L4.09775 4.83206C4.53073 4.76157 5.04427 4.37894 5.23559 3.98623L6.65538 1.14666C7.43072 -0.383893 8.67933 -0.383893 9.45467 1.15673Z"
        fill="#292D32"
      />
    </svg>
  );
}

function RatingOff() {
  return (
    <svg
      width="14"
      height="14"
      viewBox="0 0 17 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M12.2979 16C11.9008 16 11.3912 15.8726 10.7542 15.4979L8.51341 14.1714C8.28109 14.0365 7.83144 14.0365 7.60662 14.1714L5.35839 15.4979C4.03193 16.2848 3.25254 15.97 2.90032 15.7152C2.55559 15.4604 2.01601 14.8084 2.36823 13.3096L2.90032 11.0089C2.96027 10.7691 2.84037 10.3569 2.66051 10.1771L0.801961 8.31851C-0.127312 7.38924 -0.0523707 6.59486 0.0750296 6.20514C0.20243 5.81545 0.607113 5.12599 1.8961 4.90866L4.28673 4.51147C4.51156 4.474 4.83381 4.23419 4.93123 4.03184L6.25769 1.38641C6.85721 0.179859 7.64409 0 8.05627 0C8.46845 0 9.25533 0.179859 9.85486 1.38641L11.1738 4.02435C11.2787 4.22669 11.601 4.4665 11.8258 4.50398L14.2164 4.90116C15.5129 5.11849 15.9176 5.80795 16.0375 6.19765C16.1574 6.58737 16.2324 7.38175 15.3106 8.31102L13.452 10.1771C13.2722 10.3569 13.1598 10.7616 13.2122 11.0089L13.7443 13.3096C14.089 14.8084 13.557 15.4604 13.2122 15.7152C13.0249 15.8501 12.7251 16 12.2979 16ZM8.05627 12.9424C8.42348 12.9424 8.79069 13.0323 9.08296 13.2047L11.3237 14.5311C11.9757 14.9208 12.3879 14.9208 12.5453 14.8084C12.7026 14.696 12.815 14.2988 12.6502 13.5644L12.1181 11.2637C11.9757 10.6417 12.208 9.83982 12.6577 9.38268L14.5162 7.52413C14.8834 7.15692 15.0483 6.7972 14.9734 6.5499C14.8909 6.30257 14.5462 6.10023 14.0366 6.01779L11.646 5.6206C11.0689 5.52318 10.4394 5.05854 10.1771 4.53395L8.85814 1.89602C8.61833 1.41639 8.31856 1.13161 8.05627 1.13161C7.79397 1.13161 7.49421 1.41639 7.26189 1.89602L5.93544 4.53395C5.67315 5.05854 5.04364 5.52318 4.46659 5.6206L2.08346 6.01779C1.57386 6.10023 1.22913 6.30257 1.14669 6.5499C1.06426 6.7972 1.23662 7.16442 1.60383 7.52413L3.46238 9.38268C3.91203 9.83233 4.14434 10.6417 4.00196 11.2637L3.46987 13.5644C3.29751 14.3063 3.41741 14.696 3.57479 14.8084C3.73217 14.9208 4.13685 14.9134 4.79633 14.5311L7.03707 13.2047C7.32184 13.0323 7.68906 12.9424 8.05627 12.9424Z"
        fill="#292D32"
      />
    </svg>
  );
}

function RatingHalf() {
  return (
    <svg
      width="14"
      height="14"
      viewBox="0 0 17 17"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8 0C7.51251 0.025611 7.029 0.407746 6.65538 1.14528L5.23559 3.98485C5.04427 4.37756 4.53073 4.76019 4.09775 4.83068L1.53 5.2536C-0.111313 5.53554 -0.493951 6.72378 0.684169 7.9019L2.68798 9.90571C3.02027 10.238 3.21159 10.8925 3.12097 11.3758L2.54701 13.8529C2.09389 15.8064 3.1411 16.5616 4.86302 15.5446L7.26961 14.1147C7.46987 13.9936 7.73259 13.9286 8 13.9195V0Z"
        fill="#292D32"
      />
      <path
        fillRule="evenodd"
        clipRule="evenodd"
        d="M8 14.0715C8.18765 14.0631 8.38416 14.0964 8.51341 14.1714L10.7542 15.4979C11.3912 15.8726 11.9008 16 12.2979 16C12.7251 16 13.0249 15.8501 13.2122 15.7152C13.557 15.4604 14.089 14.8084 13.7443 13.3096L13.2122 11.0089C13.1598 10.7616 13.2722 10.3569 13.452 10.1771L15.3106 8.31102C16.2324 7.38175 16.1574 6.58737 16.0375 6.19765C15.9176 5.80795 15.5129 5.11849 14.2164 4.90116L11.8258 4.50398C11.601 4.4665 11.2787 4.22669 11.1738 4.02435L9.85486 1.38641C9.25533 0.179859 8.46845 0 8.05627 0C8.03822 0 8.01944 0.00034504 8 0.00110628V1.13587C8.01892 1.13304 8.03769 1.13161 8.05627 1.13161C8.31856 1.13161 8.61833 1.41639 8.85814 1.89602L10.1771 4.53395C10.4394 5.05854 11.0689 5.52318 11.646 5.6206L14.0366 6.01779C14.5462 6.10023 14.8909 6.30257 14.9734 6.5499C15.0483 6.7972 14.8834 7.15692 14.5162 7.52413L12.6577 9.38268C12.208 9.83982 11.9757 10.6417 12.1181 11.2637L12.6502 13.5644C12.815 14.2988 12.7026 14.696 12.5453 14.8084C12.3879 14.9208 11.9757 14.9208 11.3237 14.5311L9.08296 13.2047C8.79069 13.0323 8.42348 12.9424 8.05627 12.9424C8.03751 12.9424 8.01875 12.9426 8 12.9431V14.0715Z"
        fill="#292D32"
      />
    </svg>
  );
}

export default function Rating(props: Props) {
  const TOTAL = 5;

  if (props.count > TOTAL) {
    throw new Error(`Count must be less than ${TOTAL}`);
  }
  let off_star = TOTAL - props.count;
  let on_star = props.count;
  let half_star = false;
  const is_decimal = checkIsDecimal(props.count);
  on_star = Math.floor(props.count);
  const decimal_value = props.count - on_star;
  if (is_decimal && decimal_value >= 0.5) {
    half_star = true;
  }

  if (is_decimal && half_star) off_star = Math.floor(off_star);
  if (is_decimal && !half_star) off_star = Math.ceil(off_star);

  const dummy_array_on = Array.apply(0, Array(on_star));
  const dummy_array_off = Array.apply(0, Array(off_star));

  useEffect(() => {
    if (off_star < 0) throw new Error("Count must be less than 5");
  }, []);

  return (
    <div className="flex gap-1">
      {dummy_array_on.map((el, index) => {
        return <RatingOn key={index + "on"} />;
      })}
      {half_star && <RatingHalf />}
      {dummy_array_off.map((el: any, index) => (
        <RatingOff key={index + "off"} />
      ))}
    </div>
  );
}
